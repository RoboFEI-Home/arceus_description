<?xml version="1.0"?>

<robot name="arceus" xmlns:xacro="http://ros.org/wiki/xacro">

	<xacro:arg name="sim_mode" default="false"/>
	<xacro:arg name="use_omni_wheels" default="false"/>

	<xacro:include filename="ros2_control.urdf"/>
	<xacro:include filename="wheel.urdf"/>
	<xacro:include filename="gazebo.urdf"/>

	<xacro:property name="base_radius" value="0.2125"/>
	<xacro:property name="base_width" value="0.200"/>

	<xacro:property name="wheel_radius" value="0.07"/>
	<xacro:property name="wheel_width" value="0.028"/>
	<xacro:property name="wheel_zoff" value="0.093"/>

	<xacro:property name="motor_shaft_radius" value="0.002" />
    <xacro:property name="shaft_mass" value="0.001" />
	<xacro:property name="wheel_thickness" value="0.01905" />
    <xacro:property name="motor_shaft_length" value="0.020"/>

	<!--Inertial property macros-->
	<xacro:macro name="box_inertia" params="m w h d">
    	<inertial>
      		<origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      		<mass value="${m}"/>
      		<inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    	</inertial>
  	</xacro:macro>

	<xacro:macro name="base_inertia" params="m r h">
		<inertial>
			<origin xyz="0 0 0" rpy="${pi/2} 0 0" />
			<mass value="${m}"/>
			<inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
		</inertial>
 	</xacro:macro>

	<!--Robot Base-->
	<link name="base_link">
		<visual>
			<geometry>
				<!-- <mesh filename="file://$(find arceus_description)/meshes/Base.stl" scale="0.001 0.001 0.001"/> -->
				<cylinder length="${base_width}" radius="${base_radius}"/>
			</geometry>
			<material name="Cyan">
				<color rgba="0 1.0 1.0 1.0"/>
			</material>
		</visual>
		<collision>
      		<geometry>
       			<cylinder radius="${base_radius}" length="${base_width}"/>
      		</geometry>
    	</collision>

    	<xacro:base_inertia m="15" r="${base_radius}" h="${base_width}"/>
  	</link>

	<!--Robot Footprint-->
	<link name="base_footprint"/>

	<joint name="base_joint" type="fixed">
		<parent link="base_link"/>
		<child link="base_footprint"/>
		<origin xyz="0.0 0.0 ${-(wheel_radius+base_width/2)-0.005}" rpy="0 0 0"/>
  	</joint>

	<!--Wheels-->
	<xacro:wheel parent="base_link" suffix="1" theta="${pi}" m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    <xacro:wheel parent="base_link" suffix="2" theta="-${pi/3}" m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    <xacro:wheel parent="base_link" suffix="3" theta="${pi/3}" m="0.5" r="${wheel_radius}" h="${wheel_width}"/>

	<!-- Lidar -->
	<link name="lidar_link">
		<inertial>
				<origin xyz="0 0 0" rpy="0 0 0"/>
				<mass value="0.125"/>
				<inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
		</inertial>

		<collision>
				<origin xyz="0 0 0" rpy="0 0 0"/>
				<geometry>
					<box size="0.0555 0.0555 0.051"/>
				</geometry>
		</collision>

		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.0555 0.0555 0.051"/>
			</geometry>
		</visual>
	</link>

	<joint name="lidar_joint" type="fixed">
  		<parent link="base_link"/>
  		<child link="lidar_link"/>
  		<origin xyz="0 0 ${(base_width/2)+0.0255}" rpy="0 0 0"/>
	</joint>
	<!--Fazer alterações mais tarde por conta da geometria do lidar-->
	<gazebo reference="lidar_link">
  		<sensor name="lidar" type="ray">
    		<always_on>true</always_on>
    		<visualize>true</visualize>
    		<update_rate>5</update_rate>
    		<ray>
				<scan>
					<horizontal>
						<samples>360</samples>
						<resolution>1.000000</resolution>
						<min_angle>0.000000</min_angle>
						<max_angle>6.280000</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.120000</min>
					<max>3.5</max>
					<resolution>0.015000</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
    		</ray>
			<plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
				<ros>
					<remapping>~/out:=scan</remapping>
				</ros>
				<output_type>sensor_msgs/LaserScan</output_type>
				<frame_name>lidar_link</frame_name>
			</plugin>
		</sensor>
	</gazebo>
</robot>
